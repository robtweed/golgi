function load(){let o="conduit-signup",t=-1;customElements.define(o,class extends HTMLElement{constructor(){super(),t++;this.html='<div class="auth-page"><div class="container page"><div class="row"><div class="col-md-6 offset-md-3 col-xs-12"><h1 class="text-xs-center">Sign Up</h1><p class="text-xs-center"><a href="#" golgi:on_click="switchToLogin">Have an account?</a></p><ul class="error-messages" golgi:prop="errorsEl"></ul><form golgi:on_submit="signup"><fieldset><fieldset class="form-group"><input golgi:prop="username" class="form-control form-control-lg" type="text" placeholder="Username"></fieldset><fieldset class="form-group"><input golgi:prop="email" class="form-control form-control-lg" type="email" placeholder="Email"></fieldset><fieldset class="form-group"><input golgi:prop="password" class="form-control form-control-lg" type="password" placeholder="Password"></fieldset><button class="btn btn-lg btn-primary pull-xs-right">Sign In</button></fieldset></form></div></div></div></div>',this.name=o+"-"+t}setState(o){o.name&&(this.name=o.name),o.root&&(this.root=o.root,o.root.login_page=this)}async signup(o){o.preventDefault(),this.errorsEl.textContent="";var o=await this.rootComponent.apis.registerUser(this.username.value,this.email.value,this.password.value);o.errors?this.rootComponent.addErrors(o.errors,this.errorsEl):(this.rootComponent.loggedIn(o.user),this.returnTo?(this.rootComponent.showLoggedInOptions(),o={returnTo:this.returnTo},this.rootComponent.switchToPage(this.returnTo,o)):this.rootComponent.switchToPage("home_page"))}switchToLogin(){var o={returnTo:this.returnTo};this.rootComponent.switchToPage("login",o)}onSelected(o){this.rootComponent.clearErrors(this.errorsEl),this.username.value="",this.email.value="",this.password.value="",o&&(this.returnTo=o.returnTo)}})}export{load};