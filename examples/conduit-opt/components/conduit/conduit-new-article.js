function load(){let t="conduit-new-article",i=-1;customElements.define(t,class extends HTMLElement{constructor(){super(),i++;this.html=`<div class="editor-page"><div class="container page"><div class="row"><div class="col-md-10 offset-md-1 col-xs-12"><ul class="error-messages" golgi:prop="errorsEl"></ul><form><fieldset><fieldset class="form-group"><input golgi:prop="article_title" type="text" value="golgi:bind=title" class="form-control form-control-lg" placeholder="Article Title"></fieldset><fieldset class="form-group"><input golgi:prop="description" type="text" value="golgi:bind=description" class="form-control" placeholder="What's this article about?"></fieldset><fieldset class="form-group"><textarea golgi:prop="body" class="form-control" rows="8" value="golgi:bind=body" placeholder="Write your article (in markdown)"></textarea></fieldset><fieldset class="form-group"><input golgi:prop="tagListField" type="text" value="golgi:bind=tagListField" class="form-control" placeholder="Enter tags" golgi:on_change="displayTagIcon"><div class="tag-list" golgi:prop="tagListEl"></div></fieldset><button class="btn btn-lg pull-xs-right btn-primary" type="button" golgi:on_click="submitArticle">Publish Article</button></fieldset></form></div></div></div></div>`,this.name=t+"-"+i}setState(t){t.name&&(this.name=t.name)}async displayTagIcon(){console.log("changed!");var t=this.tagListField.value;-1!==this.tagList.indexOf(t)?this.tagListField.value="":(this.tagList.push(t),this.tagListField.value="",await this.addTag(t))}async submitArticle(t){console.log("submit button!");let i;if((i="editing"===this.mode?await this.rootComponent.apis.updateArticle(this.article.slug,this.article_title.value,this.description.value,this.body.value,this.tagList):await this.rootComponent.apis.createArticle(this.article_title.value,this.description.value,this.body.value,this.tagList)).errors)this.rootComponent.addErrors(i.errors,this.errorsEl);else{let t=this.rootComponent.pageComponent.get("home_page");t.refresh_home_page();var e={slug:i.article.slug};this.rootComponent.switchToPage("article",e)}}async addTags(t){this.renderComponentMap("conduit-new-article-tag",this.tagListEl,this.context,t,"new_article_tags")}async addTag(t){let i=await this.renderComponent("conduit-new-article-tag",this.tagListEl,this.context);var e="new_article_tag_"+t;i.addStateMap(e),this.golgi_state[e]=t}onSelected(t){this.rootComponent.clearErrors(this.errorsEl),this.removeAllByName("conduit-new-article-tag",this.tagListEl),t&&t.editing_article?(this.article=t.editing_article,this.mode="editing",this.golgi_state.article_form={title:this.article.title,description:this.article.description,body:this.article.rawBody,tagListField:""},this.addTags(this.article.tagList),this.tagList=this.article.tagList):(this.golgi_state.article_form={title:"",description:"",body:"",tagListField:""},this.tagList=[],this.mode="new")}onBeforeState(){this.addStateMap("article_form")}})}export{load};